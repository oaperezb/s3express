apiVersion: apps/v1
kind: Deployment
metadata:
  name: s3express-app
  namespace: s3onezone
  labels:
    app: s3express-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: s3express-app
  template:
    metadata:
      labels:
        app: s3express-app
    spec:
      serviceAccountName: s3express-sa
      containers:
      - name: s3express-container
        image: public.ecr.aws/amazonlinux/amazonlinux:latest
        command:
          - bash
          - '-lc'
          - |
            set -euo pipefail

            # Install required packages
            dnf -y install --allowerasing unzip curl util-linux procps-ng fuse

            # Install mountpoint-s3
            dnf -y install https://s3.amazonaws.com/mountpoint-s3-release/latest/x86_64/mount-s3.rpm

            # Install AWS CLI
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install

            # Create mount directory and ensure it's clean
            mkdir -p /mnt/s3express
            
            # Unmount if already mounted
            umount /mnt/s3express 2>/dev/null || true
            
            # Wait a moment for unmount to complete
            sleep 2

            # Clean up AWS credentials (remove any newlines)
            export AWS_ACCESS_KEY_ID=$(echo $AWS_ACCESS_KEY_ID | tr -d '\n\r')
            export AWS_SECRET_ACCESS_KEY=$(echo $AWS_SECRET_ACCESS_KEY | tr -d '\n\r')
            
            # Test AWS credentials and bucket access
            echo "Testing AWS credentials..."
            aws sts get-caller-identity
            
            echo "Testing S3Express bucket access..."
            aws s3 ls s3://$S3EXPRESS_BUCKET_NAME --region $AWS_REGION
            
            echo "Mounting S3Express bucket..."
            # Mount S3Express bucket with increased timeout
            timeout 60 mount-s3 --region $AWS_REGION $S3EXPRESS_BUCKET_NAME /mnt/s3express &
            
            # Wait for mount to be ready
            echo "Waiting for mount to be ready..."
            sleep 10
            
            # Check if mount is successful
            if mount | grep -q "/mnt/s3express"; then
                echo "S3Express bucket mounted successfully!"
                ls -la /mnt/s3express
            else
                echo "Mount failed or not ready yet"
                ps aux | grep mount-s3 || echo "mount-s3 process not found"
            fi

            # Keep container running
            tail -f /dev/null
        env:
        - name: AWS_REGION
          value: "us-east-1"
        - name: S3EXPRESS_BUCKET_NAME
          value: "one-zone-storage-demo--use1-az4--x-s3"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: secret-access-key

        securityContext:
          privileged: true  # Required for mounting
        resources:
          requests:
            memory: "1Gi"
            cpu: "50m"
          limits:
            memory: "2Gi"
            cpu: "1000m"

      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: s3express-service
  namespace: s3onezone
spec:
  selector:
    app: s3express-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP

